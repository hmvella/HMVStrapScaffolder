<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Themes1="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
    xmlns:ui1="clr-namespace:HMVScaffolder.Mvc"
    x:Class="HMVScaffolder.Mvc.StyleResources">
    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FrameworkElement.Margin" Value="0 5 0 5"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="Control.Padding" Value="0"/>
        <Style.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value=".56"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LayoutLabel"
             TargetType="{x:Type Label}"
             BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FrameworkElement.Margin" Value="0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="Control.Padding" Value="0"/>
        <Style.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value=".56"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="FrameworkElement.Margin" Value="0 5 0 5"/>
        <Style.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            </Trigger>
            <Trigger Property="ComboBox.IsEditable" Value="True">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid Name="templateRoot" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup Name="PART_Popup"
                                                     AllowsTransparency="True"
                                                     Grid.ColumnSpan="2"
                                                     PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                                     Placement="Bottom"
                                                     IsOpen="{Binding IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}">
                                    <Themes1:SystemDropShadowChrome Name="shadow"
                                                             Color="Transparent"
                                                             FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                                             FrameworkElement.MinWidth="{Binding ActualWidth,ElementName=templateRoot}">
                                        <Border Name="DropDownBorder"
                                                                     BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                                                     BorderThickness="1"
                                                                     Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                            <ScrollViewer Name="DropDownScrollViewer">
                                                <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas Name="canvas"
                                                                                         HorizontalAlignment="Left"
                                                                                         Height="0"
                                                                                         VerticalAlignment="Top"
                                                                                         Width="0">
                                                        <Rectangle Name="OpaqueRect"
                                                                                                 Fill="{Binding Background,ElementName=DropDownBorder}"
                                                                                                 Height="{Binding ActualHeight,ElementName=DropDownBorder}"
                                                                                                 Width="{Binding ActualWidth,ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter Name="ItemsPresenter"
                                                                                         KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                         SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Themes1:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton Name="toggleButton"
                                                     BorderBrush="{TemplateBinding Control.BorderBrush}"
                                                     BorderThickness="{TemplateBinding Control.BorderThickness}"
                                                     Background="{TemplateBinding Control.Background}"
                                                     Grid.ColumnSpan="2"
                                                     IsChecked="{Binding IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="Control.IsTabStop" Value="False"/>
                                            <Setter Property="UIElement.Focusable" Value="False"/>
                                            <Setter Property="ButtonBase.ClickMode" Value="Press"/>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border Name="templateRoot"
                                                                                 BorderBrush="#FFACACAC"
                                                                                 BorderThickness="{TemplateBinding Control.BorderThickness}"
                                                                                 SnapsToDevicePixels="True">
                                                            <Border.Background>
                                                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                                                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <Border Name="splitBorder"
                                                                                         BorderBrush="#00FFFFFF"
                                                                                         BorderThickness="1"
                                                                                         HorizontalAlignment="Right"
                                                                                         Margin="0"
                                                                                         SnapsToDevicePixels="True"
                                                                                         Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                <Path Name="Arrow"
                                                                                                 Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z"
                                                                                                 Fill="#FF606060"
                                                                                                 HorizontalAlignment="Center"
                                                                                                 Margin="0"
                                                                                                 VerticalAlignment="Center"/>
                                                            </Border>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEditable,RelativeSource={RelativeSource FindAncestor,AncestorLevel=1,AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEnabled,RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="templateRoot"
                                                                                         Property="Border.Background"
                                                                                         Value="#FFFFFFFF"/>
                                                                <Setter TargetName="templateRoot"
                                                                                         Property="Border.BorderBrush"
                                                                                         Value="#FFABADB3"/>
                                                                <Setter TargetName="splitBorder"
                                                                                         Property="Border.Background"
                                                                                         Value="#00FFFFFF"/>
                                                                <Setter TargetName="splitBorder"
                                                                                         Property="Border.BorderBrush"
                                                                                         Value="#00FFFFFF"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                <Setter TargetName="Arrow"
                                                                                             Property="Shape.Fill"
                                                                                             Value="#FF000000"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable,RelativeSource={RelativeSource FindAncestor,AncestorLevel=1,AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="templateRoot" Property="Border.Background">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFECF4FC" Offset="0"/>
                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="templateRoot"
                                                                                         Property="Border.BorderBrush"
                                                                                         Value="#FF7EB4EA"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable,RelativeSource={RelativeSource FindAncestor,AncestorLevel=1,AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="templateRoot"
                                                                                         Property="Border.Background"
                                                                                         Value="#FFFFFFFF"/>
                                                                <Setter TargetName="templateRoot"
                                                                                         Property="Border.BorderBrush"
                                                                                         Value="#FF7EB4EA"/>
                                                                <Setter TargetName="splitBorder" Property="Border.Background">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFEBF4FC" Offset="0"/>
                                                                            <GradientStop Color="#FFDCECFC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="splitBorder"
                                                                                         Property="Border.BorderBrush"
                                                                                         Value="#FF7EB4EA"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="ButtonBase.IsPressed" Value="True">
                                                                <Setter TargetName="Arrow"
                                                                                             Property="Shape.Fill"
                                                                                             Value="#FF000000"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable,RelativeSource={RelativeSource FindAncestor,AncestorLevel=1,AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="templateRoot" Property="Border.Background">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAECFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="templateRoot"
                                                                                         Property="Border.BorderBrush"
                                                                                         Value="#FF569DE5"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsPressed,RelativeSource={RelativeSource Self}}" Value="true"/>
                                                                    <Condition Binding="{Binding IsEditable,RelativeSource={RelativeSource FindAncestor,AncestorLevel=1,AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="templateRoot"
                                                                                         Property="Border.Background"
                                                                                         Value="#FFFFFFFF"/>
                                                                <Setter TargetName="templateRoot"
                                                                                         Property="Border.BorderBrush"
                                                                                         Value="#FF569DE5"/>
                                                                <Setter TargetName="splitBorder" Property="Border.Background">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                                            <GradientStop Color="#FFDAEBFC" Offset="0"/>
                                                                            <GradientStop Color="#FFC4E0FC" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="splitBorder"
                                                                                         Property="Border.BorderBrush"
                                                                                         Value="#FF569DE5"/>
                                                            </MultiDataTrigger>
                                                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                                                <Setter TargetName="Arrow"
                                                                                             Property="Shape.Fill"
                                                                                             Value="#FFBFBFBF"/>
                                                            </Trigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEnabled,RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEditable,RelativeSource={RelativeSource FindAncestor,AncestorLevel=1,AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="templateRoot"
                                                                                         Property="Border.Background"
                                                                                         Value="#FFF0F0F0"/>
                                                                <Setter TargetName="templateRoot"
                                                                                         Property="Border.BorderBrush"
                                                                                         Value="#FFD9D9D9"/>
                                                            </MultiDataTrigger>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsEnabled,RelativeSource={RelativeSource Self}}" Value="false"/>
                                                                    <Condition Binding="{Binding IsEditable,RelativeSource={RelativeSource FindAncestor,AncestorLevel=1,AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter TargetName="templateRoot"
                                                                                         Property="Border.Background"
                                                                                         Value="#FFFFFFFF"/>
                                                                <Setter TargetName="templateRoot"
                                                                                         Property="Border.BorderBrush"
                                                                                         Value="#FFBFBFBF"/>
                                                                <Setter TargetName="splitBorder"
                                                                                         Property="Border.Background"
                                                                                         Value="#00FFFFFF"/>
                                                                <Setter TargetName="splitBorder"
                                                                                         Property="Border.BorderBrush"
                                                                                         Value="#00FFFFFF"/>
                                                            </MultiDataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <Border Name="Border"
                                                     Background="#FFFFFFFF"
                                                     Margin="{TemplateBinding Control.BorderThickness}">
                                    <ui1:DropDownTextBox x:Name="PART_EditableTextBox"
                                                             HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                             Margin="{TemplateBinding Control.Padding}"
                                                             VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                             AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                                             IsReadOnly="{Binding IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}">
                                        <ui1:DropDownTextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="UIElement.AllowDrop" Value="True"/>
                                                <Setter Property="FrameworkElement.MinWidth" Value="0"/>
                                                <Setter Property="FrameworkElement.MinHeight" Value="0"/>
                                                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                                            <ScrollViewer Name="PART_ContentHost"
                                                                                         Background="#00FFFFFF"
                                                                                         Focusable="False"
                                                                                         HorizontalScrollBarVisibility="Hidden"
                                                                                         VerticalScrollBarVisibility="Hidden"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ui1:DropDownTextBox.Style>
                                    </ui1:DropDownTextBox>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter TargetName="Border"
                                                         Property="UIElement.Opacity"
                                                         Value="0.56"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="Control.Foreground" Value="#FF000000"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                                                 Property="Popup.HasDropShadow"
                                                 Value="True">
                                    <Setter TargetName="shadow"
                                                         Property="FrameworkElement.Margin"
                                                         Value="0,0,5,5"/>
                                    <Setter TargetName="shadow"
                                                         Property="Themes1:SystemDropShadowChrome.Color"
                                                         Value="#71000000"/>
                                </Trigger>
                                <Trigger Property="ItemsControl.HasItems" Value="False">
                                    <Setter TargetName="DropDownBorder"
                                                         Property="FrameworkElement.Height"
                                                         Value="95"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ItemsControl.IsGrouping" Value="True"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </MultiTrigger>
                                <Trigger SourceName="DropDownScrollViewer"
                                                 Property="ScrollViewer.CanContentScroll"
                                                 Value="False">
                                    <Setter TargetName="OpaqueRect"
                                                         Value="{Binding VerticalOffset,ElementName=DropDownScrollViewer}"
                                                         Property="Canvas.Top"/>
                                    <Setter TargetName="OpaqueRect"
                                                         Value="{Binding HorizontalOffset,ElementName=DropDownScrollViewer}"
                                                         Property="Canvas.Left"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="FrameworkElement.Margin" Value="0 5 0 5"/>
        <Setter Property="Control.Padding" Value="2"/>
        <Style.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value=".56"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SmallButton"
             TargetType="{x:Type Button}"
             BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FrameworkElement.Margin" Value="10 5 0 5"/>
        <Setter Property="FrameworkElement.MinWidth" Value="27"/>
    </Style>
    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="FrameworkElement.Margin" Value="0 5 0 5"/>
        <Style.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value=".56"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BottomCheckBox"
             TargetType="{x:Type CheckBox}"
             BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="FrameworkElement.Margin" Value="0 5 0 0"/>
        <Style.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="UIElement.Opacity" Value=".56"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="AddButtonStyle"
             TargetType="{x:Type Button}"
             BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Button.IsDefault" Value="True"/>
        <Setter Property="FrameworkElement.MinWidth" Value="75"/>
        <Setter Property="FrameworkElement.Margin" Value="0,0,0,6"/>
        <Setter Property="FrameworkElement.MinHeight" Value="27"/>
    </Style>
    <Style x:Key="CancelButtonStyle"
             TargetType="{x:Type Button}"
             BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="FrameworkElement.MinWidth" Value="75"/>
        <Setter Property="Button.IsCancel" Value="True"/>
        <Setter Property="FrameworkElement.Margin" Value="12,0,0,6"/>
        <Setter Property="FrameworkElement.MinHeight" Value="27"/>
    </Style>
    <Style x:Key="PanelStyle" TargetType="{x:Type Panel}">
        <Setter Property="FrameworkElement.Margin" Value="12"/>
    </Style>
    <Style x:Key="UserControlStyle"
             TargetType="{x:Type UserControl}"
             BasedOn="{StaticResource {x:Type UserControl}}">
        <Setter Property="FrameworkElement.Margin" Value="12"/>
    </Style>
    <Style x:Key="AddCancelStackPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="FrameworkElement.Margin" Value="0 0 12 0"/>
        <Setter Property="StackPanel.Orientation" Value="Horizontal"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right"/>
    </Style>
    <Style x:Key="StackPanelBackgroundStyle" TargetType="{x:Type StackPanel}">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="False"/>
                    <Condition Binding="{Binding Path=IsModelClassSupported}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="StackPanelModelEnabled" TargetType="{x:Type StackPanel}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsViewWithModelSelected}" Value="false">
                <Setter Property="UIElement.IsEnabled" Value="False"/>
                <Setter Property="FrameworkElement.ToolTip" Value="This feature is only available to views with a strongly-typed model"/>
                <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>